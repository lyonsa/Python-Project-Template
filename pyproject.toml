[project]
name = "streaming_data"
version = "0.1.0"
requires-python  = ">= 3.10"
description = "A project for streaming data processing"
license = "MIT"
readme = "README.md"
authors = [
    { name = "Allen Lyons", email = "allyons16@gmail.com" },
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project.urls]
homepage = "https://github.com/lyonsa/streaming_data.git"

[tool.setuptools]
package-dir = { "" = "src" }
packages = [
    "streaming",
]

[project.scripts]
streaming_data = "streaming_data:main"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "A",   # flake8-builtins
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "BLE", # flake8-bind-except
    "COM", # flake8-commas
    "D",   # pydocstyle
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle
    "EM",  # flake8-errmsg
    "F",   # pyflakes
    "FBT", # flake8-boolean-trap
    "LOG", # flake8-logging
    "N",   # PEP8 Naming
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # Ruff specific rules
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "UP",  # pyupgrade
    "YTT", # flake8-2020
]

ignore = [
    "ANN204", # Missing return type annotation for special method {name}
    "D100",   # Missing docstring in public module
    "D105",   # Missing docstring in magic method
    "D203",   # 1 blank line required before class docstring
    "D212",   # Multi-line docstring summary should start at the first line
    "Q000",   # Single quotes found but double quotes preferred
    "Q001",   # Single quote multiline found but double quotes preferred
    "S101",   # Use of assert detected
    "S113",   # Probable use of `requests` call without timeout

    # These might be useful to eventually resolve
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`
]

[tool.ruff.lint.per-file-ignores]
"test/*" = ["ANN", "D1", "PLR"]
